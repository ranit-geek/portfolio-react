{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","href","rel","target","aria-hidden","Component","AboutMe","Contact","Projects","Resume","Main","Switch","Route","exact","path","component","App","index_es","numParticles","position","height","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b14fb06.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport {Grid, Cell} from 'react-mdl'\nclass LandingPage extends Component\n{\n    render(){\n        return(\n            <div style={{width: '100%', margin: 'auto'}}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <img\n              src='https://icons-for-free.com/free-icons/png/512/984119.png'\n              alt=\"avatar\"\n              className=\"avatar-img\"\n              />\n\n            <div className=\"banner-text\">\n              <h1>Software Engineer</h1>\n\n            <hr/>\n\n          <p>NodeJS | Express | MongoDB | Java | Python | JavaScript | Selenium | Appium | AWS | React</p>\n\n        <div className=\"social-links\">\n\n          {/* LinkedIn */}\n          <a href=\"https://www.linkedin.com/in/ranit-dey-587b1081/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n          </a>\n\n          {/* Github */}\n          <a href=\"https://github.com/ranit-geek\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n          </a>\n\n        </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n        )\n    }\n}\n\nexport default LandingPage","import React , {Component} from 'react'\nclass AboutMe extends Component\n{\n    render(){\n        return(\n            <div><h1>Aboutme Page</h1></div>\n        )\n    }\n}\n\nexport default AboutMe","import React , {Component} from 'react'\nclass Contact extends Component\n{\n    render(){\n        return(\n            <div><h1>Contact Page</h1></div>\n        )\n    }\n}\n\nexport default Contact","import React , {Component} from 'react'\nclass Projects extends Component\n{\n    render(){\n        return(\n            <div><h1>Project Page</h1></div>\n        )\n    }\n}\n\nexport default Projects","import React , {Component} from 'react'\nclass Resume extends Component\n{\n    render(){\n        return(\n            <div><h1>Resume Page</h1></div>\n        )\n    }\n}\n\nexport default Resume","import React from 'react'\nimport {Switch, Route } from 'react-router-dom'\n\nimport LandingPage from './landingpage'\nimport AboutMe from './aboutme'\nimport Contact from './contact'\nimport Projects from './projects'\nimport Resume from './resume'\n\nconst Main = ()=>(\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage}/>\n        <Route path=\"/AboutMe\" component={AboutMe}/>\n        <Route path=\"/Contact\" component={Contact}/>\n        <Route path=\"/Projects\" component={Projects}/>\n        <Route path=\"/Resume\" component={Resume}/>\n    </Switch>\n)\n\n\nexport default Main","import React, { Component } from 'react';\nimport './App.css';\nimport {Layout, Header, Navigation, Drawer, Content, Grid, Cell} from 'react-mdl'\nimport ParticleAnimation from 'react-particle-animation'\nimport Main from './components/main'\nimport {Link} from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <ParticleAnimation\n          numParticles={500}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%'\n          }}\n        />\n    \n    <Layout>\n        <Header className=\"header-color\" title=\"Ranit's Portfolio\" scroll>\n            <Navigation>\n                <Link to=\"/Resume\" >Resume</Link>\n                <Link to=\"/AboutMe\">About Me</Link>\n                <Link to=\"/Projects\">Projects</Link>\n                <Link to=\"/Contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Title\">\n            <Navigation>\n                <Link to=\"/Resume\">Resume</Link>\n                <Link to=\"/AboutMe\">About Me</Link>\n                <Link to=\"/Projects\">Projects</Link>\n                <Link to=\"/Contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter basename={process.env.PUBLIC_URL}>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}